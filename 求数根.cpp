#include <bits/stdc++.h>
using namespace std;
int i=1,a[100001];
void sg(int num){
    int sum=0;
    while(num){
        sum+=(num%10);
        num/=10;
    }
    if(sum/10>0){
        cout<<sum<<' ';
        sg(sum);
    }
    else cout<<sum<<endl;
}
int main(){
    while(cin>>a[i]){
        i++;
    }
    for(int j=1;j<i-1;j++){
        if(a[j]/10==0){
            cout<<a[j]<<endl;
        }else{
            cout<<a[j]<<' ';
            sg(a[j]);
        }
    }
    return 0;
}
/*
问题描述
(shugen.cpp)数根可以通过把一个数的各个位上的数字加起来得到。如果得到的数是一位数，那么这个数就是数根。如果结果是两位数或者包括更多位的数字，那么再把这些数字加起来。如此进行下去，直到得到是一位数为止。比如，对于24来说，把2和4相加得到6，由于6是一位数，因此6是24的数根。再比如39，把3和9加起来得到12，由于12不是一位数，因此还得把1和2加起来，最后得到3，这是一个一位数，因此3是39的数根。

输入格式
输入包括一些正整数(小于2*10^9)，每个数一行。输入的最后一行是0，表示输入的结束，这一行不用处理。行数在1000行以内。

输出格式
对每个正整数，输出求该数数根时数的变化过程。每个数根变化情况一行，两数间用一个空格隔开。(每行的最后一个数为数根)
*/